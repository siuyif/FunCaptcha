package com.siuyifypcaptcha.testfuncpatcha;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.Gravity;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;
import com.anupcowkur.wheelmenu.WheelMenu;
import java.util.Random;

public class MainActivity extends AppCompatActivity {
    private WheelMenu wheelMenu;
    final Random rnd = new Random();
    private String randomImg;
    private TextView text;


    @Override
    public void onCreate(final Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //using the wheelMenu library, this will be where they obtain the image from the drawable folder.
        wheelMenu = (WheelMenu) findViewById(R.id.wheelMenu);

        // this is to enable the images generated by random
        final String randomImg  = "img_" + rnd.nextInt(3);

        //this divides the wheel(circle) into 12 slices.
        wheelMenu.setDivCount(12);

        //set the random generated image for the wheel
        wheelMenu.setWheelImage(getResourceID(randomImg, "drawable", getApplicationContext()));

        //Display text based on the image that was generated randomly.
        text = (TextView) findViewById(R.id.textBasedonImg);
        if (randomImg.equals("img_0")){
            text.setText("Make the cat face right way up.");
        }
        else if (randomImg.equals("img_1")){
            text.setText("Make the hot air ballon scenenary face right way up.");
        }
        else{
            text.setText("Make the corgi face right way up.");
        }

        // listener to monitor change events
        wheelMenu.setWheelChangeListener(new WheelMenu.WheelChangeListener() {

            @Override
            public void onSelectionChange(int selectedPosition) {
                //To obtain the selected slice
                int sum = wheelMenu.getSelectedPosition() + 1;

                //check which random generated image was displayed and if the user moves the image to the right selected slice
                if (randomImg.equals("img_0") && (sum == 6)){
                        Intent intent = new Intent(MainActivity.this, MainActivity2.class);
                        startActivity(intent);
                }
                else if (randomImg.equals("img_1") && (sum == 10)){
                        Intent intent = new Intent(MainActivity.this, MainActivity2.class);
                        startActivity(intent);
                }
                else if (randomImg.equals("img_2") && (sum == 2)){
                        Intent intent = new Intent(MainActivity.this, MainActivity2.class);
                        startActivity(intent);
                }
            }
        });
    }


    //return value
    protected final int getResourceID(final String resName, final String resType, final Context ctx){
        final int ResourceID = ctx.getResources().getIdentifier(resName, resType, ctx.getApplicationInfo().packageName);

        if (ResourceID == 0){
            throw new IllegalArgumentException("File invalid");
        }
        else{
            return ResourceID;
        }
    }

    // to print the hints for users
    public void hint (View view){
        Toast position = Toast.makeText(MainActivity.this, "Use the red | as an indicator to position the image.", Toast.LENGTH_LONG);
        position.setGravity(Gravity.TOP|Gravity.CENTER_HORIZONTAL,0, 250);
        position.show();
    }

    // to enable users to refresh the activity, if they find the given challenge difficult
    public void refresh(View view){
        Intent i = new Intent(this, MainActivity.class);
        i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        startActivity(i);
    }
}